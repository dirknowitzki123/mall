#spring cloud-框架配置---------------------------------------------------------
#ribbon 使用okhttp,httpclient有问题
ribbon.httpclient.enabled = false
ribbon.okhttp.enabled = true
#请求处理的超时时间 单位:毫秒 2个小时 = 2*60*60*1000 = 7200000毫秒
ribbon.ReadTimeout=180000
ribbon.ConnectTimeout=10000
ribbon.MaxAutoRetries=0
ribbon.ServerListRefreshInterval=5000
#断路器配置默认开启断路器为true
hystrix.command.default.circuitBreaker.enabled=false
#熔断执行策略默认值SEMAPHORE
hystrix.command.default.execution.isolation.strategy=SEMAPHORE
#网关最大请求数
zuul.semaphore.maxSemaphores=500000
zuul.host.connect-timeout-millis=10000
zuul.set-content-length=true
#zuul默认过滤headers为:"Cookie", "Set-Cookie", "Authorization",现设置为空
zuul.sensitive-headers=
zuul.ignoredHeaders=c-exception-info

#熔断SEMAPHORE最大可执行时间
hystrix.command.default.execution.isolation.semaphore.maxConcurrentRequests=100000
#超时开关
hystrix.command.default.execution.timeout.enabled=true
#超时时间
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=60000
#eureka client间隔多久去拉取服务注册信息，默认为30秒
eureka.client.registryFetchIntervalSeconds=5
#eureka client更新实例信息的变化到Eureka服务端的间隔时间，单位为秒，默认为30秒
eureka.client.instanceInfoReplicationIntervalSeconds=5
#eureka client初始化实例信息到Eureka服务端的延迟时间，默认为40秒
eureka.client.initialInstanceInfoReplicationIntervalSeconds=0
#tomcat配置
global.tomcat.maxConnections=10000
global.tomcat.maxThreads=1000
global.tomcat.acceptorThreadCount=4
#-------------------------------------------------
midcomp-regist-center.eureka.instance.hostname = ${spring.cloud.client.hostname}
midcomp-api-gateway.eureka.instance.hostname = ${spring.cloud.client.hostname}
midcomp-monitor.eureka.instance.hostname = ${spring.cloud.client.hostname}
eureka-zipkin.eureka.instance.hostname = ${spring.cloud.client.hostname}
bycx-appr-service.eureka.instance.hostname = ${spring.cloud.client.hostname}
bycx-cana-service.eureka.instance.hostname = ${spring.cloud.client.hostname}
bycx-loan-service.eureka.instance.hostname = ${spring.cloud.client.hostname}
bycx-prod-service.eureka.instance.hostname = ${spring.cloud.client.hostname}
bycx-rece-service.eureka.instance.hostname = ${spring.cloud.client.hostname}
bycx-syst-service.eureka.instance.hostname = ${spring.cloud.client.hostname}
bycx-chnl-service.eureka.instance.hostname = ${spring.cloud.client.hostname}
bycx-mall-service.eureka.instance.hostname = ${spring.cloud.client.hostname}
#---database-核心库----------------------------------------------------------------
global.core.datasource.primary.driverClassName=com.mysql.jdbc.Driver
global.core.datasource.primary.url=jdbc:mysql://101.37.118.27:3306/bytest_27_1?useSSL=false&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull
global.core.datasource.primary.username=bytest
global.core.datasource.primary.password=bytest_cs

global.core.datasource.primary.initialSize= 1
global.core.datasource.primary.minIdle= 1
global.core.datasource.primary.maxActive= 20
global.core.datasource.primary.maxWait= 30000
global.core.datasource.primary.timeBetweenEvictionRunsMillis= 60000
global.core.datasource.primary.minEvictableIdleTimeMillis= 300000
global.core.datasource.primary.validationQuery= select 1 from dual
global.core.datasource.primary.testWhileIdle= true
global.core.datasource.primary.testOnBorrow= false
global.core.datasource.primary.testOnReturn= false
global.core.datasource.primary.removeAbandoned=true
global.core.datasource.primary.removeAbandonedTimeout=900
global.core.datasource.primary.logAbandoned=false
global.core.datasource.primary.filters=log4j

#---database-进件库----------------------------------------------------------------
global.sale.datasource.primary.driverClassName=com.mysql.jdbc.Driver
global.sale.datasource.primary.url=jdbc:mysql://47.106.61.60:8066/bytest_sale_all?useSSL=false&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull
global.sale.datasource.primary.username=bytest
global.sale.datasource.primary.password=bytest

global.sale.datasource.primary.initialSize= 1
global.sale.datasource.primary.minIdle= 1
global.sale.datasource.primary.maxActive= 20
global.sale.datasource.primary.maxWait= 30000
global.sale.datasource.primary.timeBetweenEvictionRunsMillis= 60000
global.sale.datasource.primary.minEvictableIdleTimeMillis= 300000
global.sale.datasource.primary.validationQuery= select 1 from dual
global.sale.datasource.primary.testWhileIdle= true
global.sale.datasource.primary.testOnBorrow= false
global.sale.datasource.primary.testOnReturn= false
global.sale.datasource.primary.removeAbandoned=true
global.sale.datasource.primary.removeAbandonedTimeout=900
global.sale.datasource.primary.logAbandoned=false
global.sale.datasource.primary.filters=log4j
#------cache-----------------------------------------
#缓存类型
cache.spring.cache.type=redis
#缓存名字
cache.spring.cache.cache-names=redisCache
######Redis######
#Redis数据库索引（默认为0）
cache.spring.redis.database=0
#Redis服务器地址
cache.spring.redis.host=172.16.30.7
#Redis服务器连接端口
cache.spring.redis.port=6379
# Redis服务器连接密码（默认为空）
cache.spring.redis.password=
#连接池最大连接数（使用负值表示没有限制）
cache.spring.redis.pool.max-active=100
#连接池最大阻塞等待时间（使用负值表示没有限制）
cache.spring.redis.pool.max-wait=-1
#连接池中的最大空闲连接
cache.spring.redis.pool.max-idle=8
#连接池中的最小空闲连接
cache.spring.redis.pool.min-idle=1
#连接超时时间（毫秒）
cache.spring.redis.timeout=3000
#redis哨兵模式配置（上面的单节点不生效了）
cache.spring.redis.sentinel.master=mymaster
cache.spring.redis.sentinel.nodes=172.16.30.7:26379,172.16.30.7:26380
#-service-core配置------------------------------------------------------------------------------
#feign请求连接超时时间 单位:毫秒  30秒 = 30000毫秒
global.feign.connectTimeoutMillis=30000
#feign请求处理的超时时间 单位:毫秒 2个小时 = 2*60*60*1000 = 7200000毫秒  10分钟 = 10*60*1000 = 600000毫秒
global.feign.readTimeoutMillis=600000
#feign 使用okhttp,httpclient有问题
global.feign.httpclient.enabled=false
global.feign.okhttp.enabled=true

#配置是否发送异常邮件
global.mail.send=false
#配置发送邮件
global.mail.smtp.host=smtp.163.com
global.mail.smtp.auth=true
global.mail.sender.username=boya_error_log@163.com
global.mail.sender.password=boya1234
global.mail.sender.from=boya_error_log@163.com
global.mail.sender.to=it_errorlog@9ffenqigo.com
#------zipkin-server-路由跟踪中心配置-------------------------------------------
eureka-zipkin.server.port=8889
eureka-zipkin.eureka.instance.ip-address=127.0.0.1
eureka-zipkin.spring.sleuth.enabled=false
eureka-zipkin.zipkin.storage.type=elasticsearch
eureka-zipkin.zipkin.storage.StorageComponent=elasticsearch
eureka-zipkin.zipkin.storage.elasticsearch.hosts=47.96.37.167:9200
eureka-zipkin.zipkin.storage.elasticsearch.cluster=elasticsearch
eureka-zipkin.zipkin.storage.elasticsearch.index=dev_zipkin
eureka-zipkin.zipkin.storage.elasticsearch.index-shards=2
eureka-zipkin.zipkin.storage.elasticsearch.index-replicas=1
eureka-zipkin.zipkin.storage.elasticsearch.username=
eureka-zipkin.zipkin.storage.elasticsearch.password=
#------zipkin-client--------------------------------------------
spring.cloud.stream.kafka.binder.brokers=172.16.30.7:9092
spring.cloud.stream.kafka.binder.zkNodes=172.16.30.7:2181
spring.sleuth.sampler.percentage=1.0 
#---------------------------------------------------------------------
#---------------------------------------------------------------------
#-------register-center-server---服务注册中心服务端配置------------------------------------------------
midcomp-regist-center.server.port=8761
midcomp-regist-center.eureka.instance.ip-address=127.0.0.1
midcomp-regist-center.eureka.instance.prefer-ip-address=true
# 开发测试使用; 关闭自我保护模式(缺省为打开)
midcomp-regist-center.eureka.instance.server.enable-self-preservation=false
# 开发测试使用; 扫描[失效服务的(微服务的续约间隔时间)]间隔时间(缺省为60*1000ms);
# 它会检查超过一定时间(默认90s)没有Renew(续期)的微服务,发现则会注销该微服务节点;
midcomp-regist-center.eureka.instance.server.eviction-interval-timer-in-ms=2000
# 设置是否从注册中心获取注册信息(缺省true)
# 单点的EurekaServer,不需要同步其它EurekaServer节点的数据,故设为false
# fetch-registry: false
# 设置是否将自己作为客户端注册到注册中心(缺省true)
# 这里为不需要(查看@EnableEurekaServer注解的源码，会发现它间接用到了@EnableDiscoveryClient)
midcomp-regist-center.eureka.instance.client.fetch-registry=false
midcomp-regist-center.eureka.instance.client.register-with-eureka=false
midcomp-regist-center.eureka.client.service-url.defaultZone = http://${spring.cloud.client.hostname}:8761/eureka/
#-------register-center-client---服务注册中心客户端配置------------------------------------------------
gloabl.eureka.instance.service-url.defaultZone=http://${spring.cloud.client.hostname}:8761/eureka/
# 开发测试; 开启健康检查(需要spring-boot-starter-actuator依赖)
# 客户端发送心跳包时会带上自己的健康信息
gloabl.eureka.client.healthcheck.enabled=true
# 开发测试; 续约到期时间(默认90秒) 
# 即90s后如果还没有续约就到期了, Server 扫描到后会注销该微服务节点
gloabl.eureka.instance.lease-expiration-duration-in-seconds=10
# 开发测试; 续约更新时间间隔(默认30秒) 
# 即微服务会周期性(默认30s)地向 Eureka Server 发送心跳以Renew(续约)自己的信息(类似于heartbeat 心跳)
gloabl.eureka.instance.lease-renewal-interval-in-seconds=5
#-------midcomp-api-gateway---网关配置------------------------------------------------
midcomp-api-gateway.server.port=8730
midcomp-api-gateway.eureka.instance.ip-address=127.0.0.1
midcomp-api-gateway.upload.multipart.enabled=true
midcomp-api-gateway.upload.multipart.max-file-size=10485760
midcomp-api-gateway.upload.multipart.max-request-size=10485760
#是否开启认证功能
midcomp-api-gateway.authentication.enable=true
#------midcomp-monitor---应用监控------------------------------------------------
midcomp-monitor.server.port=8261
midcomp-monitor.eureka.instance.ip-address=127.0.0.1
midcomp-monitor.management.security.enabled=false
midcomp-monitor.security.user.name=admin
midcomp-monitor.security.user.password=123456
midcomp-monitor.security.basic.enabled=false 
#--bycx-cust-service---------------------------------------------
bycx-cust-service.server.port=8081  
bycx-cust-service.eureka.instance.ip-address=127.0.0.1
#--bycx-appr-service----------------------------------------------
bycx-appr-service.server.port=8084
bycx-appr-service.eureka.instance.ip-address=127.0.0.1
#--bycx-authcenter-service----------------------------------------
bycx-authcenter-service.server.port=8087
bycx-authcenter-service.eureka.instance.ip-address=127.0.0.1
bycx-authcenter-service.register.password.valid=30
#--bycx-cana-service----------------------------------------------
bycx-cana-service.server.port=8082
bycx-cana-service.eureka.instance.ip-address=127.0.0.1
#--bycx-loan-service----------------------------------------------
bycx-loan-service.server.port=8083
bycx-loan-service.eureka.instance.ip-address=127.0.0.1
#合同服务器(获取合同签约信息)
bycx-loan-service.contract.query.sign.info=http://47.96.37.167:8080/contract-service/anon/ssqian/contract/querysigninfo.int
#--bycx-prod-service----------------------------------------------
bycx-prod-service.server.port=8085
bycx-prod-service.eureka.instance.ip-address=127.0.0.1
bycx-prod-service.telemarke.get.prodNo=http://47.97.5.99:8080/TELE/tele/svr/eleCustChkCom
#--bycx-rece-service----------------------------------------------
bycx-rece-service.server.port=8087
bycx-rece-service.eureka.instance.ip-address=127.0.0.1

#通讯录大小
bycx-rece-service.upload.file.mobile.size=1024
#图片大小
bycx-rece-service.upload.file.pic.size=500
bycx-rece-service.upload.file.path=/home/app/uploads/pub/
bycx-rece-service.upload.tempfile.path=/home/app/uploads/temp/
#设置上传文件大小默认为10MB 结尾带KB或者MB
bycx-rece-service.upload.file.size=10MB
bycx-rece-service.upload.file.server.addr=http://47.96.37.167:8090/fileServer/servlet/AccessFileUpload
bycx-rece-service.down.file.server.addr=http://47.96.37.167:8090/fileServer/servlet/downfbs
bycx-rece-service.down.file.server.servlet.url.pattern=servlet/downfbs
bycx-rece-service.upload.file.zoom.height=120
bycx-rece-service.upload.file.zoom.width=120
bycx-rece-service.aly.file.server.addr=http://121.199.9.85:8010/api/v1/aliyun/upload_file
#appconfig========================================================================
bycx-rece-service.system.app.aeskey = omf$R#*GOE!>?u:c
bycx-rece-service.system.app.rsaPubKey =MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCJ7ln6M5S4vup1BDXizcuwVYwLcIBeKigluZb+tthU3N7t8hISR2/EpmGvgp42Ooijo8abVhvbcihmYal9k35eUH01AecVE9e9Vn6gL9XBTj3LsPTIg01BfDoxSKBjEtwwtbyeG6BNCQbF89NF2Nfj/Zn7i2BduQcrlaYZ7wr4SwIDAQAB
bycx-rece-service.system.app.service = app_service
bycx-rece-service.system.app.version = 0.1.0
bycx-rece-service.system.app.flag = 25600001

#上上签签约
bycx-rece-service.contract.sign.query.url=http://10.45.32.35:8082/contract-service/anon/ssqian/contract/getsignurl.int

#短信有效时间，单位分钟
bycx-rece-service.pub.sendSms.time=5
#发送短信url生产环境环境
bycx-rece-service.pub.sendSms.url=http://172.16.30.5:8089/anon/send
#线程池配置
bycx-rece-service.TaskE.corePoolSize=100
bycx-rece-service.TaskE.maxPoolSize=500
bycx-rece-service.TaskE.queueCapacity=300
bycx-rece-service.TaskE.keepAliveSeconds=180

#验证码缓存key前缀
bycx-rece-service.SENDSMS_EXPIRE=SENDSMS_EXPIRE
#频繁发送验证码的手机号拉入redis黑名单key前缀
bycx-rece-service.MSG_MOBILE_BLAK=MSG_MOBILE_BLAK
##验证码有效时间key前缀
bycx-rece-service.SMSNO_EXPIRE=SMSNO_EXPIRE
#设置超过验证次数后，锁定手机号，解锁默认为24小时后
bycx-rece-service.lOGIN_LOCK_TIME=24
#合同服务器(获取合同签约信息)
bycx-loan-service.contract.query.sign.info=http://47.96.37.167:8080/contract-service/anon/ssqian/contract/querysigninfo.int
#大数据服务===begin=====================================================================
bycx-rece-service.dsj.server.url=http://47.96.37.167:8082/by-dm-server/
#贷款提交操作验证(noFace) 
bycx-rece-service.dsj.server.finally.noface = http://47.96.37.167:8082/by-dm-server/anon/dm/apply/no/face.int
#贷款提交操作验证 
bycx-rece-service.dsj.server.finally = http://47.96.37.167:8082/by-dm-server/anon/dm/apply/all.int
#贷款二次提交大数据接口
bycx-rece-service.dsj.server.second.finally=http://47.96.37.167:8082/by-dm-server/anon/dm/apply/re.int
#自动审批 (非销售)
bycx-rece-service.dsj.server.auto.approve = http://47.96.37.167:8082/by-dm-server/anon/dm/auto/machine/trial.int
#自动审批 (销售)
bycx-rece-service.dsj.server.auto.other.approve = http://47.96.37.167:8082/by-dm-server/anon/dm/auto/other/machine/trial.int
#人脸识别相似度保存
bycx-rece-service.dsj.server.face.similarity.save = http://47.96.37.167:8082/by-dm-server/anon/dm/face/similarity/save.int
#验证用户是否授权电商/京东
bycx-rece-service.dsj.server.ecomm.jd.auth.check = http://47.96.37.167:8082/by-dm-server/anon/dm/query/isauth/ecomm.int
#获取电商/京东授权链接
bycx-rece-service.dsj.server.ecomm.jd.auth.url = http://47.96.37.167:8082/by-dm-server/anon/dm/query/ecomm/auth.int
#上传客户通话详单
bycx-rece-service.dsj.upload.callthemlist=http://121.199.9.85:9400/api/v1/it_part/phone_detail
#上传客户通讯录
bycx-rece-service.dsj.upload.contactlist=http://121.199.9.85:9400/api/v1/it_part/contacts_list
#人脸识别相似度保存
bycx-rece-service.dsj.server.face.similarity.save = http://47.96.37.167:8082/by-dm-server/anon/dm/face/similarity/save.int
#验证用户是否授权电商/京东
bycx-rece-service.dsj.server.ecomm.jd.auth.check = http://47.96.37.167:8082/by-dm-server/anon/dm/query/isauth/ecomm.int
#获取电商/京东授权链接
bycx-rece-service.dsj.server.ecomm.jd.auth.url = http://47.96.37.167:8082/by-dm-server/anon/dm/query/ecomm/auth.int
#同盾用户信息及其风险项检验
bycx-rece-service.dsj.check.infoandrisk = http://121.199.9.85:8010/api/v1/main/post_data
#招易卡保存用户额度
bycx-rece-service.dsj.server.zy_save_userquota=http://121.199.9.85:1120/api/user/update_info
#招易卡查询用户额度
bycx-rece-service.dsj.server.zy_query_userquota=http://121.199.9.85:1120/api/user/query_status
#招易卡用户消费记录
bycx-rece-service.dsj.server.zy_save_purchaserecord=http://121.199.9.85:1120/api/user/new_record
#招易卡共有参数
bycx-rece-service.dsj.server.zy_app_id=test
bycx-rece-service.dsj.server.zy_app_secret_key=m234hb3hj4bhj2j32bj432n4j2
#大数据服务===end=====================================================================
#玖富===begin=========================================================================
#玖富工单确认
bycx-rece-service.jf.anon.order.confirm = http://47.96.37.167:8028/9fservice/anon/jf/order/confirm
#玖富个人创建客户号接口
bycx-rece-service.jf.anon.individual.createCustNo = http://47.96.37.167:8028/9fservice/anon/9f/join/createClientNoOfPersonal
#玖富个人开户接口
bycx-rece-service.jf.anon.individual.openAccount = http://47.96.37.167:8028/9fservice/anon/9f/join/openAccountOfPersonal
#玖富个人提现接口
bycx-rece-service.jf.anon.individual.withdrawal = http://47.96.37.167:8028/9fservice/anon/9f/withdraw/go
#合同签章接口
bycx-rece-service.jf.anon.individual.getSealCommon = http://47.96.37.167:8028/9fservice/anon/9f/contract/getSealCommon
#查询合同接口
bycx-rece-service.jf.anon.individual.lookContract = http://47.96.37.167:8028/9fservice/anon/9f/contract/lookContract
#查询工单合同列表接口
bycx-rece-service.jf.anon.individual.getContractList = http://47.96.37.167:8028/9fservice/anon/9f/contract/getContractList
#生成合同接口
bycx-rece-service.jf.anon.individual.generateContract = http://47.96.37.167:8028/9fservice/anon/9f/contract/generateContract

#合同生产
bycx-rece-service.jf.contract.info.generate=http://47.96.37.167:8028/9fservice/anon/br/rece/contract
#玖富===end===========================================================================

#电销===begin======
bycx-rece-service.tele.checkWhiteList = http://47.97.5.99:8080/TELE/tele/svr/eleCustCheckApp
bycx-rece-service.tele.check.url = http://47.97.5.99:8080/TELE/tele/svr/teleCustChk
bycx-rece-service.tele.queryCreditLimit = http://47.97.5.99:8080/TELE/tele/svr/queryCreditLimit
#电销===begin======

#--bycx-syst-service----------------------------------------------
bycx-syst-service.server.port=8086
bycx-syst-service.eureka.instance.ip-address=127.0.0.1
#--bycx-chnl-service----------------------------------------------
bycx-chnl-service.server.port=8075
bycx-chnl-service.eureka.instance.ip-address=127.0.0.1
#--bycx-mall-service----------------------------------------------
bycx-mall-service.server.port=8088
bycx-mall-service.eureka.instance.ip-address=127.0.0.1



# 融360 API配置===begin===================================
#融360对应码值
bycx-rece-service.dock.api.rong360.code_id=42600001
bycx-rece-service.dock.api.rong360.sign_type=RSA
bycx-rece-service.dock.api.rong360.version=1.0
bycx-rece-service.dock.api.rong360.format=json
bycx-rece-service.dock.api.rong360.biz_enc=0
#合同列表地址
bycx-rece-service.dock.api.rong360.contractUrl=${bycx-rece-service.rece.rootpath}/third/dock/r360/contracts/page
#API URL地址
bycx-rece-service.dock.api.rong360.url=https://openapi-test.rong360.com/gateway
#定时任务是否开启
bycx-rece-service.dock.api.rong360.task.runable=true
# 融360 API配置===end=====================================
######################大数据调用地址#########################
bycx-rece-service.rong360.by.dm.server=http://47.96.37.167:8082/by-dm-server
#####################ss基本信息检查服务#########################
bycx-rece-service.rong360.check=${bycx-rece-service.rong360.by.dm.server}/anon/dm/check/baseinfo.int
######################银行卡三要素判断######################
bycx-rece-service.rong360.bankcardinfo=${bycx-rece-service.rong360.by.dm.server}/anon/dm/get/bankcardinfo.int
######################获取银行卡类型##############################
bycx-rece-service.rong360.bigdata.bankCardType=${bycx-rece-service.rong360.by.dm.server}/anon/dm/check/bankcardtype.int
######################补充信息推送大数据#########################
bycx-rece-service.rong360.extrainfo=${bycx-rece-service.rong360.by.dm.server}/anon/dm/check/extrainfo.int
######################推送订单基本信息
bycx-rece-service.rong360.bigdata.orderinfo=${bycx-rece-service.rong360.by.dm.server}/anon/dm/check/orderinfo.int
######################获取芝麻授权地址
bycx-rece-service.rong360.bigdata.zmAuthUrl=${bycx-rece-service.rong360.by.dm.server}/anon/dm/getauthurl.int

######################无回调地址的芝麻分授权地址
bycx-rece-service.dm.bigdata.zmAuthUrl= ${bycx-rece-service.rong360.by.dm.server}/anon/dm/v1/getauthurl.int

#####################360金融 相关参数  
bycx-rece-service.dock.api.qihu360.code_id=25600004
bycx-rece-service.dock.api.qihu360.baseUrl=http://t.360.cn/xdpt/openapi/proxy/hdo


bycx-rece-service.rece.rootpath=http://118.112.188.78:8088
#####################玖富2.0 接口回调地址  begin
#开户结果回调地址
bycx-rece-service.dock.api.jf.openAccount.backUrl=${bycx-rece-service.rece.rootpath}/third/dock/jf/openAccount/back
#提现结果回调地址
bycx-rece-service.dock.api.jf.withdrawal.backUrl=${bycx-rece-service.rece.rootpath}/third/dock/jf/withdrawal/back
#####################玖富2.0 接口回调地址  end

bycx-mall-service.eureka.instance.ip-address=127.0.0.1
bycx-mall-service.login.url=http://10.10.27.10:8730/bycx-rece-service/aSysLogin/cust/inerLogin
bycx-mall-service.saveInfo.url=http://10.10.27.10:8730/bycx-loan-service/bLoLoanBranch/saveBranchInfo
bycx-mall-service.loanGoodsSaveInfo.url=http://10.10.27.10:8730/bycx-loan-service/bLoLoanGoods/saveGoodsInfos
bycx-mall-service.privateKey.url=http://10.10.27.10:8730/bycx-syst-service/aSysClientKey/getPrivate
bycx-mall-service.loanStat.url=http://10.10.27.10:8730/bycx-loan-service/bLoLoanInfo/updateLoanStat


#--bycx-vcc-service----------------------------------------------
bycx-vcc-service.server.port=8076
bycx-vcc-service.eureka.instance.ip-address=127.0.0.1
